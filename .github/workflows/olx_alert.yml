name: OLX Telegram Alerts

on:
  schedule:
    - cron: "*/5 * * * *"        # verifică la 5 minute
  workflow_dispatch:

jobs:
  crawl:
    concurrency:
      group: olx-alerts          # NU mai avem cancel-in-progress

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ RESTORE: ia cel mai recent state.json din cache
      - name: Restore state cache
        id: cache-state
        uses: actions/cache/restore@v4
        with:
          path: state.json
          # fallback la orice cheie care începe cu prefixul
          key:   dummy          # (obligatoriu, dar nu se pot folosi expresii)
          restore-keys: |
            olx-state-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 2️⃣ rulează spiderul (PS Vita)
      - name: Run spider (PS Vita)
        env:
          SEARCH_URL:          ${{ secrets.SEARCH_URL }}
          TELEGRAM_BOT_TOKEN:  ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:    ${{ secrets.TELEGRAM_CHAT_ID }}
        run: scrapy crawl watch

      # ── de-coment dacă ai a doua căutare (PSP) ─────────────────
      # - name: Run spider (PSP)
      #   env:
      #     SEARCH_URL:          ${{ secrets.SEARCH_URL_PSP }}
      #     TELEGRAM_BOT_TOKEN:  ${{ secrets.TELEGRAM_BOT_TOKEN }}
      #     TELEGRAM_CHAT_ID:    ${{ secrets.TELEGRAM_CHAT_ID }}
      #   run: scrapy crawl watch
      # ────────────────────────────────────────────────────────────

      # 3️⃣ SAVE: urcă state.json sub o cheie unică
      - name: Save state cache
        uses: actions/cache/save@v4
        if: always()                       # rulează chiar dacă spiderul iese cu 0 item
        with:
          path: state.json
          key: olx-state-${{ github.run_id }}
